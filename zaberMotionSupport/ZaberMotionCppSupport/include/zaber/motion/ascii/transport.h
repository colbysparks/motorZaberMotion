// ===== THIS FILE IS GENERATED FROM A TEMPLATE ===== //
// ============== DO NOT EDIT DIRECTLY ============== //

#pragma once

#include <string>

namespace zaber {
namespace motion {
namespace ascii {

/**
 * Connection transport backend allowing to carry Zaber ASCII protocol over arbitrary protocols.
 * Can only be used with a single connection.
 */
class Transport {
public:
    Transport(int transportId);

    Transport(const Transport& other) = delete;
    Transport& operator=(const Transport& other) = delete;

    /**
     * Creates new instance allowing to read/write messages from/to a single connection.
     * @return New instance of transport.
     */
    static Transport open();

    /**
     * Closes the transport.
     * Also closes the connection using the transport.
     */
    void close();

    /**
     * Closes the transport with error.
     * Also closes the connection using the transport propagating the error.
     * @param errorMessage Error to be propagated.
     */
    void closeWithError(const std::string& errorMessage);

    /**
     * Writes a single message to the connection.
     * The message will be processed as a reply from the device.
     * @param message Single message of Zaber ASCII protocol.
     */
    void write(const std::string& message);

    /**
     * Reads a single message generated by the connection.
     * The message is a request for the device.
     * Read should be called continuously in a loop to ensure all generated messages are processed.
     * Subsequent read call confirms that previous message was delivered to the device.
     * @return Message generated by the connection.
     */
    std::string read();

    /**
     * The transport ID identifies this transport instance with the underlying library.
     */
    int getTransportId() const;

protected:
    int _transportId;

public:
    Transport(): _transportId(-1) {};
    ~Transport();
    Transport (Transport&& other) noexcept;
    Transport& operator=(Transport&& other) noexcept;
};

}  // Namespace ascii
}  // Namespace motion
}  // Namespace zaber
